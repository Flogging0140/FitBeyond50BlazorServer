@inject IJSRuntime JSRuntime

<dialog @ref="_element">
    <div class="modal-dialog d-flex justify-content-center text-center" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <h3 class="mb-2">@Message</h3>
                @if (string.IsNullOrEmpty(Image) == false)
                {
                    <img style="width:50px;" src="@(Image)" />
                }
            </div>
            <div class="modal-footer">
                <p>
                    Will close automatically...
                </p>
            </div>
        </div>
    </div>
</dialog>


@code {
    public string Message { get; set; } = default!;

    public ElementReference _element { get; set; }

    public string Image { get; set; } = string.Empty;

    public async Task ToggleModalShow(string? message, bool successResult)
    {
        // TODO: make more versitile later
        Image = successResult == true 
        ? Image = "https://em-content.zobj.net/source/skype/289/check-mark_2714-fe0f.png"
        : Image = "https://em-content.zobj.net/thumbs/120/microsoft/319/cross-mark_274c.png";

        // status if null, message if not
        Message = !string.IsNullOrEmpty(message) ? message : Message = "Status";

        // trigger re-render
        StateHasChanged();

        // show modal
        await JSRuntime.InvokeVoidAsync("blazorOpenModal", _element);

        // wait for a bit
        await Task.Delay(2000);
    }

    #region StackSource
    /*
        81

    First you need to capture a reference of your child component:

    <ChildComponent @ref="child" />
    Then you can use this reference to call the child's component methods as you do in your code.

    <button onClick="@ShowModal">show modal</button>

    @code{
    ChildComponent child;

    void ShowModal(){
    child.Show();
        }
    }
    The namespace of your component need to be added by a using either in the page or in _Imports.razor. If your component is in the sub folder Components/ChildComponent.razor then its namespace is {YourAppNameSpace}.Components

    @using MyBlazorApp.Components
    read the code

    Share
    Edit
    Follow
    edited Feb 17 at 11:34
    answered Feb 3, 2020 at 15:27
    agua from mars's user avatar
     agua from mars
    */
    #endregion

    #region MsDocsSource
    /* 
     * Link: https://learn.microsoft.com/en-us/aspnet/core/blazor/components/?view=aspnetcore-7.0#capture-references-to-components
     * ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    The following lambda approach uses the preceding ReferenceChild component.

    Pages/ReferenceParent1.razor:

    razor

    Copy
    @page "/reference-parent-1"

    <button @onclick="@(() => childComponent?.ChildMethod(5))">
    Call <code>ReferenceChild.ChildMethod</code> with an argument of 5
    </button>

    <ReferenceChild @ref="childComponent" />

    @code {
    private ReferenceChild? childComponent;
    }
    */
    #endregion
}
