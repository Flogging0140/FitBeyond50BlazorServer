@page "/ViewPosts"
@using BlazorServer2.Data;
@using BlazorServer2.Models;
@using BlazorServer2.Pages.MiscComponents;
@using Microsoft.EntityFrameworkCore;
@inject ApplicationDbContext _context

<div class="container-fluid w-100">
    @if (BlogPosts == null)
    {
        <div class="w-100 d-flex flex-column justify-content-center align-items-center align-content-center text-center" style="height:50vh;">
            <h2 class="mt-2">Loading Content...</h2>

            @* spinner from this site *@
            <?xml version="1.0" encoding="utf-8" ?>
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin: auto; background: none; display: block; shape-rendering: auto;" width="200px" height="200px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
                <circle cx="50" cy="50" r="31" stroke-width="8" stroke="#b8cca3" stroke-dasharray="48.69468613064179 48.69468613064179" fill="none" stroke-linecap="round">
                    <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="0.9345794392523364s" keyTimes="0;1" values="0 50 50;360 50 50"></animateTransform>
                </circle>
                <!-- [ldio] generated by https://loading.io/ -->
                @*
                /*
                Loading.io Free License
                With Loading.io Free license ( LD-FREE / FREE / Free License ), items are dedicated to the public domain by waiving all our right worldwide under copyright law. You can use items under LD-FREE freely for any purpose. No attribution is required.
                */
                *@
            </svg>
        </div>

    }
    else if (BlogPosts.Count == 0)
    {
        <p>There are no posts to display...</p>
    }
    else
    {
        foreach (BlogPost blogPost in BlogPosts)
        {
            <BlogPostDemoCreation BlogPostDemo="blogPost" />
        }
    }
</div>

@code {
    public List<BlogPost> BlogPosts { get; set; } = null;
    public string LoadingMessage { get; set; } = "Loading Posts";

    protected override async Task OnInitializedAsync()
    {
        BlogPosts = await _context.BlogPosts.ToListAsync();

        await base.OnInitializedAsync();
    }
}
